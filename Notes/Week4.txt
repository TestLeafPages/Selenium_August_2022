Selenium - ADV
Snap shot
Targetlocators
Alert
Frame
window

Snap shot
Prntscrn -> Press I will take a snap shot
MSPaint -> Paste the content in my clip board
Save the image

targetlocators
1. Alert
2. Frames
3. Windows

1.Alert
FIre alert
Rain Alert
Alarm
Amma wake up
Salary Credited?
Battery low
EMI due
low fuel
Ambulance
signal
wife call
Manager call


Basic of alert
Alert is model pop up
Alert is a part js.

1. When the alert is on, entire dom will be frozen.
2. Cannot inspect an alert
3. you cannot take a screen shot when an alert is open

Members of alerts
Alert text
1 text field
2 button - Yes/no



Types of alerts
Simple Alert - only text and one button
Confirm Alert - Text with 2 buttons
Prompt Alert - Text,text field, 2 buttons

accept
dismiss
getText
sendKeys

Frames -> ?

HTML -?

<frame>
<iframe>.....</iframe>
nested html pages

Nested Frame
House -> Bedroom -> Bathroom
Bathroom -> House -> defaultContent()
Bathroom -> Bedroom -> parentFrame()

Windows
Session - ?
C726CF585B8624122FD1D9B761F5388E
0DAD34865F7C7E56F68ACE25BC05DAC4

String -> driver.getWindowHandle();
Set<String> -> driver.getWindowHandles();
Convert the Set -> List -> pickup unique locator -> get()
driver.switchTo().window(list.get(1)); -> next window
driver.switchTo().window(list.get(0)); -> base window

What will happen if you have given a wrong or invalid reference -> ?
NoSuchWindowException

Window 1 -> Click -> Window 2
Shifting to Window 2 -> Performing action -> driver.close() -> ?
Window 2 will be closed -> focus will be nowhere
You need to write code to switch to Window 1


Window 1 -> Click -> Window 2
driver.close() -> will close only the focused window
driver.quit(); -> will close all the windows under the current session

Window 1 -> Click -> Window 2, Window 3
Dashboard			 Table page, Windows

windowHandles = driver.getWindowHandles();

for(String eachHandle:windowHandles){
driver.switchTo().window(eachHandle);
if(driver.getTitle().equals(Windows)){
break;
}
}


Actions - Class -> Selenium

Adv User Interaction
driver
Will never throw any exception

Multiple select
Keydown -> Click on item1 , item 2, item 3 -> Keyup -> perform

Waits

Implicit
driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));



// How many time you write ?  only once
// Where to write? After launching browser
// Which methods are affected? findElement, findElements
// What happens after timeout? findElement -> NoSuchElementException, 
findElements -> empty List




Explicit
1. Java
Thread.sleep(5000) - 5 Seconds
Hard wait
2. Selenium
Webdriverwait - class


Exception 
Handling by herself : try, catch, finally
throw, throws

try  -> {} should contain only the happy path the content that should happen

try & catch
try & finally
try, catch & finally













































































































